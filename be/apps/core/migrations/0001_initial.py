# Generated by Django 5.1.5 on 2025-02-18 11:18

import apps.core.models
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        default=apps.core.models.User.generate_unique_id,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "username",
                    models.CharField(
                        max_length=50,
                        unique=True,
                        validators=[django.core.validators.MinLengthValidator(3)],
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        max_length=128,
                        validators=[django.core.validators.MinLengthValidator(8)],
                    ),
                ),
                ("avatar", models.URLField(blank=True, null=True)),
                ("email", models.EmailField(max_length=50, unique=True)),
                ("status", models.BooleanField(default=False)),
                ("deleted_user", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Tournaments",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("tournament_name", models.CharField(max_length=50)),
                ("start_date", models.DateTimeField(auto_now=True)),
                ("end_date", models.DateTimeField(auto_now=True)),
                (
                    "players",
                    models.ManyToManyField(
                        related_name="tournaments_name", to="core.user"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="History",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("date", models.DateTimeField(auto_now=True)),
                ("result_user", models.IntegerField()),
                ("result_opponent", models.IntegerField()),
                ("type_match", models.CharField(max_length=50)),
                ("position_match", models.IntegerField()),
                ("position_tournament", models.IntegerField(blank=True, null=True)),
                (
                    "tournament_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.tournaments",
                    ),
                ),
                (
                    "opponent_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="opponent_history",
                        to="core.user",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_history",
                        to="core.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Friends",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("declined", "Declined"),
                            ("accepted", "Accepted"),
                            ("sent", "Sent"),
                        ],
                        default="sent",
                    ),
                ),
                (
                    "friend_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="friends_as_friend",
                        to="core.user",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="friends_as_user",
                        to="core.user",
                    ),
                ),
            ],
        ),
    ]
